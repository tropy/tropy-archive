"use strict";function _interopDefault(i){return i&&"object"==typeof i&&"default"in i?i.default:i}var child_process=_interopDefault(require("child_process")),fs=_interopDefault(require("fs")),os=_interopDefault(require("os")),path=_interopDefault(require("path")),rimraf=_interopDefault(require("rimraf")),util=_interopDefault(require("util")),crossZip={zip:zip,zipSync:zipSync,unzip:unzip,unzipSync:unzipSync};function zip(i,e,t){function r(){"win32"===process.platform?rimraf(e,o):o()}function o(){var r={cwd:path.dirname(i),maxBuffer:1/0};child_process.execFile(getZipCommand(),getZipArgs(i,e),r,function(i){t(i)})}t||(t=function(){}),"win32"===process.platform?fs.stat(i,function(e,o){if(e)return t(e);o.isFile()?fs.readFile(i,function(e,o){if(e)return t(e);var n=path.join(os.tmpdir(),"cross-zip-"+Date.now());fs.mkdir(n,function(e){if(e)return t(e);fs.writeFile(path.join(n,path.basename(i)),o,function(e){if(e)return t(e);i=n,r()})})}):r()}):r()}function zipSync(i,e){if("win32"===process.platform){if(fs.statSync(i).isFile()){var t=fs.readFileSync(i),r=path.join(os.tmpdir(),"cross-zip-"+Date.now());fs.mkdirSync(r),fs.writeFileSync(path.join(r,path.basename(i)),t),i=r}rimraf.sync(e)}var o={cwd:path.dirname(i),maxBuffer:1/0};child_process.execFileSync(getZipCommand(),getZipArgs(i,e),o)}function unzip(i,e,t){t||(t=function(){});var r={maxBuffer:1/0};child_process.execFile(getUnzipCommand(),getUnzipArgs(i,e),r,function(i){t(i)})}function unzipSync(i,e){var t={maxBuffer:1/0};child_process.execFileSync(getUnzipCommand(),getUnzipArgs(i,e),t)}function getZipCommand(){return"win32"===process.platform?"powershell.exe":"zip"}function getUnzipCommand(){return"win32"===process.platform?"powershell.exe":"unzip"}function getZipArgs(i,e){return"win32"===process.platform?["-nologo","-noprofile","-command",'& { param([String]$myInPath, [String]$myOutPath); Add-Type -A "System.IO.Compression.FileSystem"; [IO.Compression.ZipFile]::CreateFromDirectory($myInPath, $myOutPath); }',"-myInPath",i,"-myOutPath",e]:["-r","-y",e,path.basename(i)]}function getUnzipArgs(i,e){return"win32"===process.platform?["-nologo","-noprofile","-command",'& { param([String]$myInPath, [String]$myOutPath); Add-Type -A "System.IO.Compression.FileSystem"; [IO.Compression.ZipFile]::ExtractToDirectory($myInPath, $myOutPath); }',"-myInPath",i,"-myOutPath",e]:["-o",i,"-d",e]}const{join:join,extname:extname,relative:relative}=path,{tmpdir:tmpdir}=os,{promisify:promisify}=util,zip$1=promisify(crossZip.zip),{copyFile:copyFile,mkdir:mkdir,mkdtemp:mkdtemp,rmdir:rmdir,writeFile:writeFile,unlink:unlink}=fs.promises;class ArchivePlugin{constructor(i,e){this.options={...ArchivePlugin.defaults,...i},this.logger=e.logger,this.dialog=e.require("../dialog").save,this.Bluebird=e.require("bluebird")}*processPhotoPaths(i,e,t){for(let r of i["@graph"])if(r.photo)for(let i of r.photo){if("file"!==i.protocol)continue;let r=i.path,o=`${i.checksum}${extname(r)}`;i.path=join(t,o),yield{src:r,dst:join(e,t,o)}}}async export(i){try{let{zipFile:e,filters:t,concurrency:r,images:o}=this.options;if(e&&!this.options.prompt||(e=await this.dialog({defaultPath:e,filters:t})),!e)return;if(".zip"!==extname(e))throw new Error(`not a zip file: ${e}`);let n=await mkdtemp(join(tmpdir(),"tropy-archive-")),s=join(n,this.options.root);if(".."!==relative(s,n))throw new Error(`root "${s}" outside of tmp folder!`);await mkdir(join(s,o),{recursive:!0}),await this.Bluebird.map(this.processPhotoPaths(i,s,o),({src:i,dst:e})=>copyFile(i,e),{concurrency:r}),await writeFile(join(s,this.options.json),JSON.stringify(i,null,2)),await unlink(join(e)).catch(),await zip$1(s,e),await rmdir(n,{recursive:!0})}catch(i){this.logger.error({stack:i.stack},"archive export failed")}}}ArchivePlugin.defaults={concurrency:64,filters:[{name:"Zip Files",extensions:["zip"]}],images:"images",json:"items.json",prompt:!1,root:"tropy"};var src=ArchivePlugin;module.exports=src;
