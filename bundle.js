"use strict";var e=require("path"),t=require("os"),r=require("util"),o=require("child_process"),n=require("fs");function i(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var a=i(e),s=i(t),c=i(r),p=i(o),u=i(n),l=function(e,t,r){r||(r=function(){});"win32"===process.platform?u.default.stat(e,(function(t,n){if(t)return r(t);n.isFile()?u.default.readFile(e,(function(t,n){if(t)return r(t);var i=a.default.join(s.default.tmpdir(),"cross-zip-"+Date.now());u.default.mkdir(i,(function(t){if(t)return r(t);u.default.writeFile(a.default.join(i,a.default.basename(e)),n,(function(t){if(t)return r(t);e=i,o()}))}))})):o()})):o();function o(){"win32"===process.platform?u.default.rmdir(t,{recursive:!0,maxRetries:3},n):n()}function n(){var o={cwd:a.default.dirname(e),maxBuffer:1/0};p.default.execFile(f(),m(e,t),o,(function(e){r(e)}))}};function f(){return"win32"===process.platform?"powershell.exe":"zip"}function d(e){return'"'+e+'"'}function m(e,t){return"win32"===process.platform?["-nologo","-noprofile","-command",'& { param([String]$myInPath, [String]$myOutPath); Add-Type -A "System.IO.Compression.FileSystem"; [IO.Compression.ZipFile]::CreateFromDirectory($myInPath, $myOutPath); exit !$? }',"-myInPath",d(e),"-myOutPath",d(t)]:["-r","-y",t,a.default.basename(e)]}const y=/\s+at.*(?:\(|\s)(.*)\)?/,h=/^(?:(?:(?:node|(?:internal\/[\w/]*|.*node_modules\/(?:babel-polyfill|pirates)\/.*)?\w+)\.js:\d+:\d+)|native)/,g=void 0===s.default.homedir?"":s.default.homedir();class w extends Error{constructor(e){if(!Array.isArray(e))throw new TypeError("Expected input to be an Array, got "+typeof e);let t=(e=[...e].map((e=>e instanceof Error?e:null!==e&&"object"==typeof e?Object.assign(new Error(e.message),e):new Error(e)))).map((e=>{return"string"==typeof e.stack?(e=>e.replace(/\s+at .*aggregate-error\/index.js:\d+:\d+\)?/g,""))((t=e.stack,r=Object.assign({pretty:!1},r),t.replace(/\\/g,"/").split("\n").filter((e=>{const t=e.match(y);if(null===t||!t[1])return!0;const r=t[1];return!r.includes(".app/Contents/Resources/electron.asar")&&!r.includes(".app/Contents/Resources/default_app.asar")&&!h.test(r)})).filter((e=>""!==e.trim())).map((e=>r.pretty?e.replace(y,((e,t)=>e.replace(t,t.replace(g,"~")))):e)).join("\n"))):String(e);var t,r})).join("\n");t="\n"+((e,t=1,r)=>{if(r={indent:" ",includeEmptyLines:!1,...r},"string"!=typeof e)throw new TypeError(`Expected \`input\` to be a \`string\`, got \`${typeof e}\``);if("number"!=typeof t)throw new TypeError(`Expected \`count\` to be a \`number\`, got \`${typeof t}\``);if("string"!=typeof r.indent)throw new TypeError(`Expected \`options.indent\` to be a \`string\`, got \`${typeof r.indent}\``);if(0===t)return e;const o=r.includeEmptyLines?/^/gm:/^(?!\s*$)/gm;return e.replace(o,r.indent.repeat(t))})(t,4),super(t),this.name="AggregateError",Object.defineProperty(this,"_errors",{value:e})}*[Symbol.iterator](){for(const e of this._errors)yield e}}var E=w;const{join:b,extname:v,relative:x,basename:j}=a.default,{tmpdir:$}=s.default,{promisify:P}=c.default,F=P(l),{copyFile:O,mkdir:k,mkdtemp:S,rmdir:I,writeFile:T,unlink:q}=u.default.promises;class z{constructor(e,t){this.options={...z.defaults,...e},this.logger=t.logger,this.dialog=t.dialog.save}*processPhotoPaths(e,t,r){let o={};for(let n of e["@graph"])if(n.photo)for(let e of n.photo){if("file"!==e.protocol)continue;let n=e.path,i=v(n),a=j(n);a in o&&e.checksum!==o[a]&&(a=`${e.checksum}${i}`),o[a]=e.checksum,e.path=b(r,a),yield{src:n,dst:b(t,r,a)}}}async export(e){let{zipFile:t,filters:r,concurrency:o,images:n}=this.options;if(t&&!this.options.prompt||(t=await this.dialog({defaultPath:t,filters:r})),!t)return;if(".zip"!==v(t))throw new Error("not a zip file: "+t);let i=await S(b($(),"tropy-archive-")),a=b(i,this.options.root);if(".."!==x(a,i))throw new Error(`root "${a}" outside of tmp folder!`);await k(b(a,n),{recursive:!0}),await(async(e,t,{concurrency:r=1/0,stopOnError:o=!0}={})=>new Promise(((n,i)=>{if("function"!=typeof t)throw new TypeError("Mapper function is required");if(!Number.isSafeInteger(r)&&r!==1/0||!(r>=1))throw new TypeError(`Expected \`concurrency\` to be an integer from 1 and up or \`Infinity\`, got \`${r}\` (${typeof r})`);const a=[],s=[],c=e[Symbol.iterator]();let p=!1,u=!1,l=0,f=0;const d=()=>{if(p)return;const e=c.next(),r=f;if(f++,e.done)return u=!0,void(0===l&&(o||0===s.length?n(a):i(new E(s))));l++,(async()=>{try{const o=await e.value;a[r]=await t(o,r),l--,d()}catch(e){o?(p=!0,i(e)):(s.push(e),l--,d())}})()};for(let e=0;e<r&&(d(),!u);e++);})))(this.processPhotoPaths(e,a,n),(({src:e,dst:t})=>O(e,t)),{concurrency:o}),await T(b(a,this.options.json),JSON.stringify(e,null,2));try{await q(t)}catch(e){}await F(a,t),await I(i,{recursive:!0})}}z.defaults={concurrency:64,filters:[{name:"Zip Files",extensions:["zip"]}],images:".",json:"items.json",prompt:!1,root:"tropy"};var A=z;module.exports=A;
